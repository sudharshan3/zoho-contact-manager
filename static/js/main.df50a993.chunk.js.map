{"version":3,"sources":["logo.svg","assets/images/logo.png","assets/images/sudharshan.JPG","components/AppHeader.js","assets/images/avatar-blue.png","Pages/Contacts/ContactTab.js","Pages/Contacts/ContactDetails.js","Pages/Contacts/ContactConfig.js","Pages/Contacts/index.js","App.js","reportWebVitals.js","server.js","index.js"],"names":["AppHeader","props","Fragment","className","Container","to","src","logo","alt","height","style","backgroundImage","profile","ContactTab","Row","Col","md","Card","id","size","cursor","lg","data","contact_name","company_name","email","mobile","contact_type","status","Badge","bg","ContactDetails","useState","loop","setLoop","childTransition","useTransition","change","from","transform","opacity","enter","delay","useEffect","setTimeout","setLayout","transition","item","div","avatar","defaultavatar","Button","variant","Tab","defaultActiveKey","sm","Nav","fill","Item","Link","eventKey","Content","Pane","onClick","setVisible","ContactConfig","layout","visible","setChange","setData","leave","contactListData","setContactListData","fetch","then","res","json","catch","err","console","log","selectRow","mode","clickToSelect","onSelect","row","isSelect","rowIndex","e","columns","ColumnToggle","ToggleList","dataField","text","hidden","sort","headerClasses","formatter","cell","formatExtraData","contacts","length","keyField","columnToggle","search","searchProps","placeholder","width","baseProps","bordered","ContactPage","App","path","element","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createServer","routes","this","namespace","post","schema","request","attrs","JSON","parse","requestBody","contact_id","Math","floor","random","get","fulldata","timing","delete","Response","errors","ReactDOM","render","StrictMode","SSRProvider","document","getElementById"],"mappings":"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","file":"static/js/main.df50a993.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/logo.d0a98377.png\";","export default __webpack_public_path__ + \"static/media/sudharshan.48c9da28.JPG\";","import React from \"react\";\r\nimport { Container, ListGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../assets/images/logo.png\";\r\nimport profile from \"../assets/images/sudharshan.JPG\";\r\nconst AppHeader = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"topheader\">\r\n        <Container>\r\n          <div className=\"topheader-content\">\r\n            <Link to=\"/\">\r\n              <img src={logo} alt=\"logo\" height={40} />\r\n            </Link>\r\n\r\n            <img\r\n              className=\"avatar-sm rounded-circle\"\r\n              style={{ backgroundImage: `url(${profile})` }}\r\n            />\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","export default __webpack_public_path__ + \"static/media/avatar-blue.c68ea43c.png\";","import React from 'react';\r\nimport { Badge, Card, Col, Row,UncontrolledTooltip } from \"react-bootstrap\"\r\nimport { Facebook, Link, Twitter } from 'react-feather';\r\n// import {  UncontrolledTooltip } from 'reactstrap';\r\n\r\nconst ContactTab = (props) => {\r\n    return (\r\n      <>\r\n       <Row className=\"mt-2\">\r\n        <Col md={12}>\r\n          <Card className=\"p-3 rounded \">\r\n       \r\n\r\n            <Row>\r\n              <Col md={12}>\r\n                <Row>\r\n                  <Col md={6}>\r\n                  <h5 className=\"text-primary mb-0 \">\r\n              <b>General Details</b>\r\n            </h5>\r\n\r\n       \r\n                  </Col>\r\n                  <Col md={6} className='text-end'>\r\n                \r\n                    <Twitter id='twitter' className='bg-primary p-2 rounded-circle text-white me-2' size={30} style={{cursor:'pointer'}}/>\r\n            \r\n              \r\n                    <Facebook id='facebook' className='bg-info p-2 rounded-circle text-white me-2' size={30} style={{cursor:'pointer'}}/>\r\n                 \r\n                   \r\n     \r\n               \r\n                  </Col>\r\n                </Row>\r\n                <hr/>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Contact Name</small>\r\n                <h6 className=\"text-dark\">{props.data.contact_name}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Company Name</small>\r\n                <h6 className=\"text-dark\">{props.data.company_name}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Email Address</small>\r\n                <h6 className=\"text-dark\">{props.data.email}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Phone</small>\r\n                <h6 className=\"text-dark\">{props.data.mobile}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Type</small>\r\n                <h6 className=\"text-dark\">{props.data.contact_type}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Status</small>\r\n                <h6>\r\n                  {props.data.status ? (\r\n                    <Badge bg=\"success\">Active</Badge>\r\n                  ) : (\r\n                    <Badge bg=\"danger\">Inactive</Badge>\r\n                  )}\r\n                </h6>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      \r\n      <Row className=\"mt-2\">\r\n        <Col md={12}>\r\n          <Card className=\"p-3 rounded \">\r\n       \r\n\r\n            <Row>\r\n              <Col md={12}>\r\n                <Row>\r\n                  <Col md={6}>\r\n                  <h5 className=\"text-primary mb-0 \">\r\n              <b>General Details</b>\r\n            </h5>\r\n\r\n       \r\n                  </Col>\r\n                  <Col md={6} className='text-end'>\r\n                \r\n                    <Twitter id='twitter' className='bg-primary p-2 rounded-circle text-white me-2' size={30} style={{cursor:'pointer'}}/>\r\n            \r\n              \r\n                    <Facebook id='facebook' className='bg-info p-2 rounded-circle text-white me-2' size={30} style={{cursor:'pointer'}}/>\r\n                 \r\n                   \r\n     \r\n               \r\n                  </Col>\r\n                </Row>\r\n                <hr/>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Contact Name</small>\r\n                <h6 className=\"text-dark\">{props.data.contact_name}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Company Name</small>\r\n                <h6 className=\"text-dark\">{props.data.company_name}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Email Address</small>\r\n                <h6 className=\"text-dark\">{props.data.email}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Phone</small>\r\n                <h6 className=\"text-dark\">{props.data.mobile}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Type</small>\r\n                <h6 className=\"text-dark\">{props.data.contact_type}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Status</small>\r\n                <h6>\r\n                  {props.data.status ? (\r\n                    <Badge bg=\"success\">Active</Badge>\r\n                  ) : (\r\n                    <Badge bg=\"danger\">Inactive</Badge>\r\n                  )}\r\n                </h6>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n            \r\n      <Row className=\"mt-2\">\r\n        <Col md={12}>\r\n          <Card className=\"p-3 rounded \">\r\n       \r\n\r\n            <Row>\r\n              <Col md={12}>\r\n                <Row>\r\n                  <Col md={6}>\r\n                  <h5 className=\"text-primary mb-0 \">\r\n              <b>General Details</b>\r\n            </h5>\r\n\r\n       \r\n                  </Col>\r\n                  <Col md={6} className='text-end'>\r\n                \r\n                    <Twitter id='twitter' className='bg-primary p-2 rounded-circle text-white me-2' size={30} style={{cursor:'pointer'}}/>\r\n            \r\n              \r\n                    <Facebook id='facebook' className='bg-info p-2 rounded-circle text-white me-2' size={30} style={{cursor:'pointer'}}/>\r\n                 \r\n                   \r\n     \r\n               \r\n                  </Col>\r\n                </Row>\r\n                <hr/>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Contact Name</small>\r\n                <h6 className=\"text-dark\">{props.data.contact_name}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Company Name</small>\r\n                <h6 className=\"text-dark\">{props.data.company_name}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Email Address</small>\r\n                <h6 className=\"text-dark\">{props.data.email}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Phone</small>\r\n                <h6 className=\"text-dark\">{props.data.mobile}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Type</small>\r\n                <h6 className=\"text-dark\">{props.data.contact_type}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Status</small>\r\n                <h6>\r\n                  {props.data.status ? (\r\n                    <Badge bg=\"success\">Active</Badge>\r\n                  ) : (\r\n                    <Badge bg=\"danger\">Inactive</Badge>\r\n                  )}\r\n                </h6>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n            \r\n      <Row className=\"mt-2\">\r\n        <Col md={12}>\r\n          <Card className=\"p-3 rounded \">\r\n       \r\n\r\n            <Row>\r\n              <Col md={12}>\r\n                <Row>\r\n                  <Col md={6}>\r\n                  <h5 className=\"text-primary mb-0 \">\r\n              <b>General Details</b>\r\n            </h5>\r\n\r\n       \r\n                  </Col>\r\n                  <Col md={6} className='text-end'>\r\n                \r\n                    <Twitter id='twitter' className='bg-primary p-2 rounded-circle text-white me-2' size={30} style={{cursor:'pointer'}}/>\r\n            \r\n              \r\n                    <Facebook id='facebook' className='bg-info p-2 rounded-circle text-white me-2' size={30} style={{cursor:'pointer'}}/>\r\n                 \r\n                   \r\n     \r\n               \r\n                  </Col>\r\n                </Row>\r\n                <hr/>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Contact Name</small>\r\n                <h6 className=\"text-dark\">{props.data.contact_name}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Company Name</small>\r\n                <h6 className=\"text-dark\">{props.data.company_name}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Email Address</small>\r\n                <h6 className=\"text-dark\">{props.data.email}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Phone</small>\r\n                <h6 className=\"text-dark\">{props.data.mobile}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Type</small>\r\n                <h6 className=\"text-dark\">{props.data.contact_type}</h6>\r\n              </Col>\r\n              <Col md={6} lg={4}>\r\n                <small className=\"text-muted\">Status</small>\r\n                <h6>\r\n                  {props.data.status ? (\r\n                    <Badge bg=\"success\">Active</Badge>\r\n                  ) : (\r\n                    <Badge bg=\"danger\">Inactive</Badge>\r\n                  )}\r\n                </h6>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      </>\r\n       \r\n    )\r\n}\r\n\r\nexport default ContactTab\r\n","import classNames from \"classnames\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Badge, Button, Card, Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport CardHeader from \"react-bootstrap/esm/CardHeader\";\r\nimport defaultavatar from '../../assets/images/avatar-blue.png';\r\nimport ContactTab from \"./ContactTab\";\r\nimport {\r\n  ChevronRight,\r\n  Crosshair,\r\n  Delete,\r\n  Edit,\r\n  Trash,\r\n  User,\r\n  X,\r\n} from \"react-feather\";\r\nimport { animated, useTransition } from \"react-spring\";\r\n\r\nconst ContactDetails = (props) => {\r\n  const [loop, setLoop] = useState(0);\r\n  const childTransition = useTransition(props.change, {\r\n    from: { transform: \"translateY(50%)\", opacity: 0 },\r\n    enter: { transform: \"translateY(0%)\", opacity: 1 },\r\n    delay: 200,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      props.setLayout(false);\r\n    }, 200);\r\n  }, [loop]);\r\n\r\n  const changeVisibility = () => {\r\n    props.setVisible(false);\r\n    setLoop(!loop);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Col className=\" g-md-2 position-relative\">\r\n        {props.transition((style, item) =>\r\n          item ? (\r\n            <animated.div\r\n              className=\"bg-white rounded shadow p-3 item h-100 position-relative\"\r\n              style={style}\r\n            >\r\n              <div className=\"contact-details-container\"></div>\r\n              {childTransition((style, item) =>\r\n                item ? (\r\n                  <animated.div style={style}>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <img\r\n                          className=\"avatar pb-2  rounded-circle\"\r\n                          src={props.data.avatar?props.data.avatar:defaultavatar}\r\n                        />\r\n                        <div>\r\n                          <h3 className=\"mb-0 mt-2\">\r\n                            {\" \"}\r\n                            <strong>{props.data.contact_name}</strong>{\" \"}\r\n                          </h3>\r\n                          <small>{props.data.email}</small>\r\n                        </div>\r\n                      </Col>\r\n                      <Col md={6} className=\"text-end mt-auto\">\r\n                        <Button variant=\"success\" className=\"me-2\">\r\n                          <Edit /> Edit\r\n                        </Button>\r\n                        <Button variant=\"danger\" className=\"me-2\">\r\n                          <Trash /> Delete\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </animated.div>\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              )}\r\n\r\n<Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\" >\r\n  <Row className=\"mt-3\">\r\n    <Col sm={12}>\r\n      <Nav fill  variant=\"pills\" className=\"flex-row\">\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"first\">General Details</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"second\">Payment Details</Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"third\">Contact Persons</Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    </Col>\r\n    <Col sm={12}>\r\n      <Tab.Content className=\"viewtab p-1\" >\r\n        <Tab.Pane eventKey=\"first\">\r\n   <ContactTab data={props.data} />\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"second\">\r\n        \"second\"\r\n        </Tab.Pane>\r\n        <Tab.Pane eventKey=\"third\">\r\n        \"third\"\r\n        </Tab.Pane>\r\n      </Tab.Content>\r\n    </Col>\r\n  </Row>\r\n</Tab.Container>\r\n           \r\n\r\n              <button\r\n                className=\"btn-sm close-btn  btn-outline-secondary\"\r\n                onClick={() => changeVisibility()}\r\n              >\r\n                <X />\r\n              </button>\r\n            </animated.div>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        )}\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Badge, Button, Col, Row } from \"react-bootstrap\";\r\nimport { useSpring, animated, useTransition, Spring } from \"react-spring\";\r\nimport { ChevronLeft, ChevronRight, Plus } from \"react-feather\";\r\nimport { ContactsData } from \"./Data\";\r\nimport defaultavatar from '../../assets/images/avatar-blue.png'\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport ToolkitProvider, {\r\n  ColumnToggle,\r\n  Search,\r\n  CSVExport,\r\n} from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport filterFactory, {\r\n  selectFilter,\r\n  textFilter,\r\n} from \"react-bootstrap-table2-filter\";\r\nimport \"react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css\";\r\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\r\nimport \"react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit.min.css\";\r\nimport ContactDetails from \"./ContactDetails\";\r\nimport SearchBar from \"react-bootstrap-table2-toolkit/lib/src/search/SearchBar\";\r\n\r\nconst ContactConfig = () => {\r\n  const [layout, setLayout] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [change, setChange] = useState(0);\r\n  const [data, setData] = useState(\"\");\r\n  const transition = useTransition(visible, {\r\n    from: { transform: \"translateX(100%)\", opacity: 0 },\r\n    enter: { transform: \"translateX(0%)\", opacity: 1 },\r\n    leave: { transform: \"translateX(100%)\", opacity: 0 },\r\n  });\r\n  const [contactListData, setContactListData] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\"/api/contacts/list\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setContactListData(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  const selectRow = {\r\n    mode: \"radio\",\r\n    clickToSelect: true,\r\n    onSelect: (row, isSelect, rowIndex, e) => {\r\n      setData(row);\r\n      setVisible(true);\r\n      setLayout(true);\r\n      setChange(change + 1);\r\n    },\r\n  };\r\n  const { ToggleList } = ColumnToggle;\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"contact_id\",\r\n      text: \"S.No\",\r\n      hidden: layout ? true : false,\r\n      sort: true,\r\n      headerClasses: `${layout ? \"d-none\" : \"\"}`,\r\n      formatter: (cell, row, rowIndex, formatExtraData) => (\r\n        <div className=\"tablediv\">\r\n          <p className=\"ps-3\">{rowIndex + 1}</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"contact_name\",\r\n      text: \"Contact Name\",\r\n      headerClasses: `${layout ? \"d-none\" : \"\"} text-start`,\r\n      sort: true,\r\n\r\n      formatter: (cell, row, rowIndex, formatExtraData) => (\r\n        <div className=\"tablediv d-flex justify-content-start align-item-center\">\r\n          <img src={row.avatar?row.avatar:defaultavatar} className=\"avatar-sm me-2\" alt=\"contact\" />\r\n          <div className=\"d-flex flex-column justify-content-around\">\r\n            {row.contact_name} <br />\r\n            {layout ? <small>{row.mobile}</small> : null}\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"company_name\",\r\n      text: \"Company Name\",\r\n      headerClasses: `${layout ? \"d-none\" : \"\"}`,\r\n      sort: true,\r\n      hidden: layout ? true : false,\r\n      formatter: (cell, row, rowIndex, formatExtraData) => (\r\n        <div className=\"tablediv\">\r\n          <p>{row.company_name}</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"email\",\r\n      text: \"Email ID\",\r\n      headerClasses: `${layout ? \"d-none\" : \"\"}`,\r\n      sort: true,\r\n      hidden: layout ? true : false,\r\n      formatter: (cell, row, rowIndex, formatExtraData) => (\r\n        <div className=\"tablediv\">\r\n          <p>{row.email}</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"mobile\",\r\n      text: \"Mobile Number\",\r\n      headerClasses: `${layout ? \"d-none\" : \"\"}`,\r\n      sort: true,\r\n      hidden: layout ? true : false,\r\n      formatter: (cell, row, rowIndex, formatExtraData) => (\r\n        <div className=\"tablediv\">\r\n          <p>{row.mobile}</p>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      headerClasses: `${layout ? \"d-none\" : \"\"}`,\r\n      sort: true,\r\n      hidden: layout ? true : false,\r\n      formatter: (cell, row, rowIndex, formatExtraData) => (\r\n        <div className=\"tablediv\">\r\n          <Badge bg={row.status?'success':'danger'}>{row.status?'Active':'Inactive'}</Badge>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"gx-5 h-100 mt-3\">\r\n        <Col className=\"g-md-2 position-relative\" lg={layout ? 4 : 12}>\r\n          <Spring\r\n            from={{ transform: \"translateY(100%)\", opacity: 0 }}\r\n            to={{ transform: \"translateY(0%)\", opacity: 1 }}\r\n          >\r\n            {(props) => (\r\n              <animated.div style={props} className={\"h-100\"}>\r\n                <div className=\"bg-white rounded shadow pt-4 px-3 pb-2 h-100\">\r\n                  <Button className=\"addcontactbtn\">\r\n                    <Plus />\r\n                  </Button>\r\n                  {contactListData.contacts && contactListData.contacts.length > 0 && (\r\n                    <Row className=\"mt-2\">\r\n                      <Col md={12}>\r\n                        <ToolkitProvider\r\n                          keyField=\"contact_id\"\r\n                          data={contactListData.contacts}\r\n                          columns={columns}\r\n                          columnToggle\r\n                          search\r\n                        >\r\n                          {(props) => (\r\n                            <div>\r\n                              <Row className=\"mb-2\">\r\n                                <Col md={6} className=\"text-start\">\r\n                                  <h3 className=\"mb-0\">Contacts</h3>\r\n                                </Col>\r\n                                <Col md={6} className=\"text-end\">\r\n                                  {!layout && (\r\n                                    <SearchBar\r\n                                      {...props.searchProps}\r\n                                      className=\"form-control w-100 formsearch\"\r\n                                      placeholder=\"Search Contact\"\r\n                                      style={{ width: \"100%\" }}\r\n                                    />\r\n                                  )}\r\n                                </Col>\r\n                              </Row>\r\n\r\n                              {layout && (\r\n                                <SearchBar\r\n                                  {...props.searchProps}\r\n                                  className=\"form-control w-100 formsearch\"\r\n                                  placeholder=\"Search Contact\"\r\n                                  style={{ width: \"100%\" }}\r\n                                />\r\n                              )}\r\n\r\n                              <BootstrapTable\r\n                                className=\"text-start\"\r\n                                {...props.baseProps}\r\n                                keyField=\"contact_id\"\r\n                                bordered={false}\r\n                                selectRow={selectRow}\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </ToolkitProvider>\r\n                      </Col>\r\n                    </Row>\r\n                  )}\r\n                </div>\r\n              </animated.div>\r\n            )}\r\n          </Spring>\r\n        </Col>\r\n\r\n        <ContactDetails\r\n          data={data}\r\n          layout={layout}\r\n          setLayout={setLayout}\r\n          setVisible={setVisible}\r\n          transition={transition}\r\n          setChange={setChange}\r\n          change={change}\r\n        />\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ContactConfig;\r\n","import React, { useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport AppHeader from \"../../components/AppHeader\";\r\nimport ContactConfig from \"./ContactConfig\";\r\n\r\nconst ContactPage = () => {\r\n \r\n  return (\r\n    <React.Fragment>\r\n      <AppHeader />\r\n      <Container className=\"centered-content\">\r\n        <ContactConfig />\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport AppHeader from \"./components/AppHeader\";\r\nimport ContactPage from \"./Pages/Contacts\";\r\nimport {\r\n  HashRouter  as Router,\r\n  Navigate,\r\n  Routes,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\n\r\nimport React from \"react\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <Routes>\r\n    <Route path=\"/\" element={<Navigate to =\"/contacts\" />}/>\r\n\r\n\r\n          <Route exact path=\"/contacts\" element={<ContactPage />} />\r\n  \r\n    </Routes>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createServer, Response } from \"miragejs\"\r\nimport fulldata from \"./data.json\"\r\nimport listdata from \"./list.json\"\r\ncreateServer({\r\n  routes() {\r\n    this.namespace = \"api\"\r\n\r\n    // Responding to a POST request\r\n    this.post(\"/contacts/add\", (schema, request) => {\r\n      let attrs = JSON.parse(request.requestBody)\r\n      attrs.contact_id = Math.floor(Math.random() * 100)\r\n\r\n      return { contacts: attrs }\r\n    })\r\n\r\n    // Using the `timing` option to slow down the response\r\n    this.get(\r\n      \"/contacts/list\",\r\n      () => {\r\n        return {\r\n          contacts: [\r\n            fulldata\r\n          ],\r\n        }\r\n      },\r\n      { timing: 1000 }\r\n    )\r\n\r\n    // Using the `Response` class to return a 500\r\n    this.delete(\"/movies/1\", () => {\r\n      let headers = {}\r\n      let data = { errors: [\"Server did not respond\"] }\r\n\r\n      return new Response(500, headers, data)\r\n    })\r\n  },\r\n})\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/customstyles.css\";\r\nimport SSRProvider from \"react-bootstrap/SSRProvider\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./server\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <SSRProvider>\r\n      <App/>\r\n    </SSRProvider>\r\n  </React.StrictMode>,\r\n\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}